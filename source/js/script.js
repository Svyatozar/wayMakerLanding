const sliderVideos = document.querySelectorAll('.slider__video')

if (sliderVideos.length > 1) {
  const sliderDescriptions = document.querySelectorAll('.slider__description')

  sliderVideos[0].play()
  for (let i = 0; i < 4; i++) {
    sliderVideos[i].addEventListener('ended', () => {
      sliderVideos[i].classList.remove('slider__video--current')
      sliderDescriptions[i].classList.remove('slider__description--current')

      const nextIndex = i + 1 === 4 ? 0 : i + 1

      sliderVideos[nextIndex].classList.add('slider__video--current')
      sliderDescriptions[nextIndex].classList.add('slider__description--current')
      sliderVideos[nextIndex].play()
    })
  }
}

if (sliderVideos.length === 1) {
  const sliderDescriptions = document.querySelectorAll('.slider__description')

  sliderVideos[0].play()

  let currentDescriptionIndex = 0

  function activateNextDescription() {
    const nextIndex = currentDescriptionIndex + 1 === 4 ? 0 : currentDescriptionIndex + 1
    sliderDescriptions[currentDescriptionIndex].classList.remove('slider__description--current')
    sliderDescriptions[nextIndex].classList.add('slider__description--current')
    currentDescriptionIndex = nextIndex

    setTimeout(activateNextDescription, 3000)
  }

  setTimeout(activateNextDescription, 3000)
}

const mainOffsetTop = document.querySelector('.main').offsetTop
const videoWrapper = document.querySelector('.video')
const videoBgEl = document.querySelector('.main-header .video__media')

window.addEventListener('scroll', () => {
  if (window.pageYOffset >= mainOffsetTop) {
    videoBgEl.pause()
    videoWrapper.style.display = 'none'
  } else {
    videoBgEl.play()
    videoWrapper.style.display = ''
  }
})

const engDictionary = {
  // –ó–∞–≥–æ–ª–æ–≤–æ–∫ –≤ —Ö–µ–¥–µ—Ä–µ –Ω–∞ –ë–∏–∑–Ω–µ—Å–µ
  headerTitleBusiness: 'Business like a game',
  // –ó–∞–≥–æ–ª–æ–≤–æ–∫ –≤ —Ö–µ–¥–µ—Ä–µ –Ω–∞ –ì–ª–∞–≤–Ω–æ–π
  headerTitleIndex: 'New way of entertainment',
  // –∫–Ω–æ–ø–∫–∞ –ú–æ–∂–Ω–æ —Å–∫–∞—á–∞—Ç—å –≤ —Ö–µ–¥–µ—Ä–µ
  canDownload: 'download',
 // –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–∞ –≥–ª–∞–≤–Ω–æ–π (–ß–∏—Ç–∞–µ—à—å —Ç–∞–∫–æ–π —Å–µ–±–µ —Ç–µ–∫—Å—Ç –Ω–∞ —ç–∫—Ä–∞–Ω–µ)
  aboutDescription: 'You read such a text on the screen, <br> click on it - and the plot <br> unfolds in real life!',
  //–ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ë–∏–∑–Ω–µ—Å–∞
  topTitleBusiness: 'Let&#39;s add game elements to your <br> business,<br> sowe will <br> increase the level, loyalty, engagement <br> and brand awareness',
  // –ó–∞–≥–æ–ª–æ–≤–æ–∫ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
   imagineThat: 'Imagine that',
   hit: 'hit',
   intoThePlot: 'into the plot',
   incredible: 'incredible',
   story: 'story',
   through: 'through',
   yourSmartphone: 'your smartphone',
  //
  // –¢–µ–∫—Å—Ç –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º
  sendUsTitle: 'Write to us! <br> Describe your wishes for the plot, or just tell us <br> about your business - we will send you an offer in 24 hours!',
  // –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ü—Ä–∏–º–µ—Ä—ã –ì–µ–π–º–∏—Ñ–∏–∫–∞—Ü–∏–π
  examplesTitle: 'Examples of gamification',
  // –¢–µ–∫—Å—Ç —Å –ì–ª–∞–≤–Ω–æ–π (–í—Å–µ —Ç–∞–∫, —ç—Ç–æ –Ω–µ —à—É—Ç–∫–∏...)
  activityTitle: 'Surely, <br> this is not a joke üòà <br> See for yourself:',
  // –¢–µ–∫—Å—Ç —Å –ì–ª–∞–≤–Ω–æ–π (–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–æ–∂–∏—Ç—å...)
  abilityToLive: 'The ability to live <br> in reality a plot <br> that has long wanted.',
  // –¢–µ–∫—Å—Ç —Å –ì–ª–∞–≤–Ω–æ–π (–¢—ã —Å–∞–º –≤—ã–±–∏—Ä–∞–µ—à—å...)
  youChoose: 'You choose <br> what suits you',
  // –¢–µ–∫—Å—Ç—ã –≤ —Å–ª–∞–π–¥–µ—Ä–µ
  activitySendUs: 'Write your quest <br> and make money on it. <br> If you write <br> an interesting quest,<br> we will immediately <br> transfer <br> the money!',
  weWillWrite: 'We will write a unique quest especially for you',
  gamesBring: 'Games bring positive emotions &nbsp; <br> because of which the average check grows',
  questKnows : 'The quest knows how to determine the location of the player <br> - we can bring him to you!',
  wePlayWithLocation : 'We will play with the features of the location, and create <br> additional cost without investment in infrastructure',
  //
  // –¢–µ–∫—Å—Ç—ã —Å –±–∞–±–ª–æ–≤
  addEmotion : 'add emotion to the shopping process',
  deliver: 'deliver educational material in a playful way',
  leadBuyers: 'lead buyers to the point of sale through interactive',
  showClients: 'show clients all locations in a certain territory',
  associateBrand : 'associate brand image with positive interaction experiences',
  //
  // –ö–Ω–æ–ø–∫–∞ –ü–µ—Ä–µ–π—Ç–∏ –∫–æ –≤—Å–µ–º –∫–≤–µ—Å—Ç–∞–º
  contentLink : 'Go to all quests',
  // –ó–∞–≥–æ–ª–æ–≤–æ–∫ –Ω–∞ –ì–ª–∞–≤–Ω–æ–π (–°–º–æ—Ç—Ä–∏, —á—Ç–æ —É –Ω–∞—Å...)
  contentTitle : 'Look what we already have',
  // –ü–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫ –Ω–∞ –ì–ª–∞–≤–Ω–æ–π (–ü—Ä–æ—Ö–æ–¥–∏ –∫–≤–µ—Å—Ç—ã, –Ω–µ...)
  contentTopText : 'Complete quests <br> without leaving home',
  // –ü–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫ –Ω–∞ –ì–ª–∞–≤–Ω–æ–π (–ê –µ—Å–ª–∏ —Ç–µ–±–µ –Ω–µ —Å–∏–¥–∏—Ç—Å—è...)
  contentMiddleText : 'And if you do not sit on <br> location, <br> then look here',
  // –°–∞–±–º–∏—Ç —Ñ–∏–¥–±–µ–∫ —Ñ–æ—Ä–º—ã
  send : 'Send',
  // –ö–æ–ø–∏—Ä–∞–π—Ç –≤ —Ñ—É—Ç–µ—Ä–µ
  copyright : '¬© 2021 WayMaker. <br> All rights reserved',
   // '–∏ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è'
  subscribe: 'subscribe',
  // –¢–µ–∫—Å—Ç—ã –¥–ª—è –∫–≤–µ—Å—Ç–æ–≤ —Å –ì–ª–∞–≤–Ω–æ–π
  firstContact : 'An incredible story about hyperreality. Immerse yourself in our "matrix" and help save the world!',
  inFrontOfPandemia : 'You managed to travel back to the beginning of 2019, when the world did not yet know about the word COVID-19. Will you prevent a pandemic?',
  simulatorOfPresident : 'Feel the power! Democracy or tyranny - it&#39;s up to you.',
  secretOfGeotorex : 'You are being introduced as an agent in medieval society. what could go wrong?',
  placesOfSmolensk : 'An interactive story that takes you through the best places in the city! Take a walk, eat, chat.',
  ghostPainter : 'Strange is happening in Gorky Park, and only you can figure it out.',
  breadCrumbsOfHistory : 'A walk through VDNKh through time.',
  // –ó–∞–≥–æ–ª–æ–≤–∫–∏ –∫–≤–µ—Å—Ç–æ–≤ —Å –ì–ª–∞–≤–Ω–æ–π
  firstContactTitle : 'First contact',
  inFrontOfPandemiaTitle : 'In front of pandemia',
  simulatorOfPresidentTitle: 'Simulator of president',
  secretOfGeotorexTitle : 'Secret of Geotorex',
  placesOfSmolenskTitle: 'Interesting places of Smolensk',
  ghostPainterTitle : 'Ghost painter',
  breadCrumbsOfHistoryTitle : 'Bread crumbs of history',
  // –¢–µ–∫—Å—Ç—ã –¥–ª—è –∫–≤–µ—Å—Ç–æ–≤ —Å –ë–∏–∑–Ω–µ—Å–∞
  forGuestsOfSmolensk : 'He takes you to the sights of the city, after which he offers to stop by for a bite to eat at the &laquo;Mayakovsky&raquo; cafe',
  intoParkGorkogo : 'A detective story that will captivate the player right from the entrance to the park, and in the course of the plot will lead to the cafe of the &laquoGarage&raquo Museum',
  WalkAroundVDNKh : 'A quest that will tell about the history of the place, as well as show how it looked in the past.',
  // –ó–∞–≥–æ–ª–æ–≤–∫–∏ –∫–≤–µ—Å—Ç–æ–≤ —Å –ë–∏–∑–Ω–µ—Å–∞
  forGuestsOfSmolenskTitle : 'Quest for guests of the city of Smolensk',
  intoParkGorkogoTitle : 'An exciting plot in Gorky Park',
  WalkAroundVDNKhTitle : 'Walk around VDNKh',
  // –ü–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä—ã –≤ —Ñ–∏–¥–±–µ–∫
  namePlaceholder : 'Your name',
  questionPlaceholder : 'Quest, offer',
  // –ù–∞–≤–∏–≥–∞—Ü–∏—è –≤ —Ö–µ–¥–µ—Ä–µ
  goToQuests : 'Go to quests',
  quests : 'Quests',
  business : 'For business',
  forPlayers : 'For players',
  // –ù–∞–≤–∏–≥–∞—Ü–∏—è –≤ —Ñ—É—Ç–µ—Ä–µ
  conditions : 'Conditions',
}

const ruDictionary = {}

const enSwitchers = document.querySelectorAll('.language-switcher-button--en')
const ruSwitchers = document.querySelectorAll('.language-switcher-button--ru')
const textElements = document.querySelectorAll('[text]');

textElements.forEach((el) => {
  if (el.tagName === 'INPUT' || el.tagName === 'TEXTAREA') {
    ruDictionary[el.getAttribute('text')] = el.getAttribute('placeholder')
  } else {
    ruDictionary[el.getAttribute('text')] = el.innerHTML
  }
})

const switchLanguage = (lang) => {
  const dict = lang === 'ru' ? ruDictionary : engDictionary

  textElements.forEach((el) => {
    if (el.tagName === 'INPUT' || el.tagName === 'TEXTAREA' ) {
      el.setAttribute('placeholder', dict[el.getAttribute('text')])
    } else {
      el.innerHTML = dict[el.getAttribute('text')]
    }
  })
}


enSwitchers.forEach((el) => {
  el.addEventListener('click', () => {
    ruSwitchers.forEach(sw => sw.classList.remove('language-switcher-button--active'))
    el.classList.add('language-switcher-button--active')
    switchLanguage('en')
  })
})

ruSwitchers.forEach((el) => {
  el.addEventListener('click', () => {
    enSwitchers.forEach(sw => sw.classList.remove('language-switcher-button--active'))
    el.classList.add('language-switcher-button--active')
    switchLanguage('ru')
  })
})


